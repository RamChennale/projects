<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="22193" started-at="2020-01-17T00:37:04Z" finished-at="2020-01-17T00:37:27Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="22193" started-at="2020-01-17T00:37:04Z" finished-at="2020-01-17T00:37:27Z">
      <class name="com.lotus.reports.AdvExtentReportDemo1">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7]" name="setUp" is-config="true" duration-ms="420" started-at="2020-01-17T00:37:04Z" finished-at="2020-01-17T00:37:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="openBrowser()[pri:1, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7]" name="openBrowser" duration-ms="10571" started-at="2020-01-17T00:37:05Z" finished-at="2020-01-17T00:37:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7]" name="checkResults" is-config="true" duration-ms="5" started-at="2020-01-17T00:37:15Z" finished-at="2020-01-17T00:37:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openBrowser status=SUCCESS method=AdvExtentReportDemo1.openBrowser()[pri:1, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="openGoogle()[pri:2, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7]" name="openGoogle" duration-ms="8981" started-at="2020-01-17T00:37:15Z" finished-at="2020-01-17T00:37:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openGoogle -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7]" name="checkResults" is-config="true" duration-ms="2" started-at="2020-01-17T00:37:24Z" finished-at="2020-01-17T00:37:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openGoogle status=SUCCESS method=AdvExtentReportDemo1.openGoogle()[pri:2, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="verifyTitle()[pri:3, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7]" name="verifyTitle" duration-ms="16" started-at="2020-01-17T00:37:24Z" finished-at="2020-01-17T00:37:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7]" name="checkResults" is-config="true" duration-ms="1" started-at="2020-01-17T00:37:24Z" finished-at="2020-01-17T00:37:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitle status=SUCCESS method=AdvExtentReportDemo1.verifyTitle()[pri:3, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="FAIL" signature="login()[pri:4, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7]" name="login" duration-ms="17" started-at="2020-01-17T00:37:24Z" finished-at="2020-01-17T00:37:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.lotus.reports.AdvExtentReportDemo1.login(AdvExtentReportDemo1.java:71)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7]" name="checkResults" is-config="true" duration-ms="17" started-at="2020-01-17T00:37:24Z" finished-at="2020-01-17T00:37:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=AdvExtentReportDemo1.login()[pri:4, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.lotus.reports.AdvExtentReportDemo1@91161c7]" name="teardown" is-config="true" duration-ms="2053" started-at="2020-01-17T00:37:24Z" finished-at="2020-01-17T00:37:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.lotus.reports.AdvExtentReportDemo1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
